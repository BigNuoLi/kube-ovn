FROM centos:7 as iptables-builder

ENV IPTABLES_VERSION=1.6.2

RUN yum install -y \
    wget \
    gcc \
    bzip2 \
    make && \
    wget ftp://ftp.netfilter.org/pub/iptables/iptables-${IPTABLES_VERSION}.tar.bz2 && \
    tar jxf iptables-${IPTABLES_VERSION}.tar.bz2 && \
    cd iptables-${IPTABLES_VERSION} && \
    ./configure \
    --prefix=/usr \
    --mandir=/usr/man \
    --disable-shared \
    --disable-devel \
    --disable-nftables \
    --enable-static \
    --host=amd64 && \
    make && \
    cp iptables/xtables-multi /iptables



FROM centos:7

RUN yum install -y \
        PyYAML \
        bind-utils \
        openssl \
        numactl-libs \
        firewalld-filesystem \
        libpcap \
        hostname \
        ipset \
        iproute strace socat nc \
        unbound unbound-devel python-openvswitch libreswan && \
        yum clean all

ENV OVS_VERSION=2.11.1
ENV OVS_SUBVERSION=1
ENV CNI_VERSION=v0.7.5

RUN curl -sSf -L --retry 5 https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-amd64-${CNI_VERSION}.tgz | tar -xz -C . ./loopback

RUN rpm -ivh https://github.com/alauda/ovs/releases/download/v${OVS_VERSION}-${OVS_SUBVERSION}/openvswitch-${OVS_VERSION}-${OVS_SUBVERSION}.el7.x86_64.rpm && \
    rpm -ivh https://github.com/alauda/ovs/releases/download/v${OVS_VERSION}-${OVS_SUBVERSION}/openvswitch-ipsec-${OVS_VERSION}-${OVS_SUBVERSION}.el7.x86_64.rpm && \
    rpm -ivh https://github.com/alauda/ovs/releases/download/v${OVS_VERSION}-${OVS_SUBVERSION}/ovn-${OVS_VERSION}-${OVS_SUBVERSION}.el7.x86_64.rpm && \
    rpm -ivh https://github.com/alauda/ovs/releases/download/v${OVS_VERSION}-${OVS_SUBVERSION}/ovn-common-${OVS_VERSION}-${OVS_SUBVERSION}.el7.x86_64.rpm && \
    rpm -ivh https://github.com/alauda/ovs/releases/download/v${OVS_VERSION}-${OVS_SUBVERSION}/ovn-host-${OVS_VERSION}-${OVS_SUBVERSION}.el7.x86_64.rpm

# override the iptables with new version
COPY --from=iptables-builder /iptables /usr/sbin/iptables

COPY start-cniserver.sh /kube-ovn/start-cniserver.sh
COPY install-cni.sh /kube-ovn/install-cni.sh
COPY kube-ovn.conflist /kube-ovn/kube-ovn.conflist

WORKDIR /kube-ovn
CMD ["sh", "start-cniserver.sh"]

COPY kube-ovn /kube-ovn/kube-ovn
COPY kube-ovn-daemon /kube-ovn/kube-ovn-daemon
